13. OOPS IN ORACLE
ORACLE 9i DATABASE FLAVOURS

Example 1:
CREATE TYPE ADDRESS_TY AS OBJECT(
	STREET VARCHAR2(50), CITY VARCHAR2(25), STATE VARCHAR2(25), ZIP NUMBER);

Example 2:
CREATE TYPE PERSON_TY AS OBJECT(
	NAME VARCHAR2(25), ADDRESS ADDRESS_TY);


Example 3:
CREATE TYPE ADDRESS_TY AS OBJECT(
	STREET VARCHAR2 (50), CITY VARCHAR2 (25), STATE VARCHAR2 (25), ZIP NUMBER);

Example 4:
CREATE TYPE PERSON_TY AS OBJECT(
	NAME VARCHAR2 (25), ADDRESS ADDRESS_TY);

Example 5:
CREATE TABLE CUSTOMER(
	CUSTOMER_ID NUMBER, PERSON PERSON_TY);


Example 6:
DESC CUSTOMER;

Example 7:
DESC PERSON_TY;


Example 8:
DESC ADDRESS_TY; 


Example 9:
SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLUMNS 
	WHERE TABLE_NAME = 'CUSTOMER';


Example 10:
SELECT ATTR_NAME, LENGTH, ATTR_TYPE_NAME FROM USER_TYPE_ATTRS
	WHERE TYPE_NAME = 'PERSON_TY';

Example 11:
Query USER_TYPE_ATTRS again to see the attributes of the ADDRESS_TY datatype:

SELECT ATTR_NAME, LENGTH, ATTR_TYPE_NAME FROM USER_TYPE_ATTRS 
	WHERE TYPE_NAME = 'ADDRESS_TY';


Example 12:
INSERT INTO CUSTOMER VALUES(1, 	PERSON_TY('Sharanam', 
	ADDRESS_TY('Dadar', 'Mumbai', 'Maharashtra', 400016)));


INSERT INTO CUSTOMER VALUES(2, 	PERSON_TY ('Vaishali', 
	ADDRESS_TY ('Balgovinddas Rd', 'Mumbai', 'Maharashtra', 400016)));


Example 13:
SELECT CUSTOMER_ID FROM CUSTOMER;

Example 14:
SELECT * FROM CUSTOMER;

Example 15:
SELECT CUSTOMER_ID, CLIENT.PERSON.NAME FROM CUSTOMER CLIENT;

Example 16:
SELECT CLIENT.PERSON.ADDRESS.STREET FROM CUSTOMER CLIENT;

Example 17:
SELECT CLIENT.PERSON.NAME, CLIENT.PERSON.ADDRESS.CITY FROM CUSTOMER CLIENT 
	WHERE CLIENT.PERSON.ADDRESS.CITY LIKE 'M%';

Example 18:
UPDATE CUSTOMER CLIENT SET CLIENT.PERSON.ADDRESS.CITY = 'Bombay' 
	WHERE CLIENT.PERSON.ADDRESS.CITY = 'Mumbai';


Example 19:
DELETE FROM CUSTOMER CLIENT WHERE CLIENT.PERSON.ADDRESS.STREET = 'Dadar';

Example 20:
CREATE OR REPLACE TYPE ADDRESS_TY AS OBJECT(
	STREET VARCHAR2 (50), CITY VARCHAR2 (25), STATE VARCHAR2 (25), ZIP NUMBER);

Next, create PERSON_TY that uses ADDRESS_TY:

CREATE OR REPLACE TYPE PERSON_TY AS OBJECT(
	NAME VARCHAR2 (25), ADDRESS ADDRESS_TY);

Next, create CUSTOMER_TY that uses PERSON_TY:

CREATE OR REPLACE TYPE CUSTOMER_TY AS OBJECT(
	CUSTOMER_ID NUMBER, PERSON  PERSON_TY);

CREATE OR REPLACE VIEW CUSTOMER_OV (CUSTOMER_ID, PERSON) AS 
	SELECT CUSTOMER_ID, PERSON_TY (NAME, ADDRESS_TY (STREET, CITY, STATE, ZIP)) 
	FROM CUSTOMER;

INSERT INTO CUSTOMER VALUES(1, 'Sharanam', 'Dadar', 'Mumbai', 'Maharashtra', 400016);
INSERT INTO CUSTOMER 
	VALUES(2, 'Vaishali', 'Balgovinddas Rd', 'Mumbai', 'Maharashtra',400016);
INSERT INTO CUSTOMER VALUES(3, 'Hansel', 'Darya Rd', 'Ahemdabad', 'Gujarat', 300042);

Example 21:
CREATE OR REPLACE VIEW CUSTOMER_OV (CUSTOMER_ID, PERSON) AS 
	SELECT CUSTOMER_ID, PERSON_TY (NAME, ADDRESS_TY (STREET, CITY, STATE, ZIP)) 
	FROM CUSTOMER WHERE STATE = 'Maharashtra';


Example 22:
INSERT INTO CUSTOMER VALUES(4, 'Silicon Chip Technologies', 'A/5 Jay Chambers', 'Vile Parle (E)', 'Maharashtra', 400057);

Example 23:
INSERT INTO CUSTOMER_OV VALUES(5, PERSON_TY ('Jasper International', 
	ADDRESS_TY ('A/7 Jay Chambers', 'Vile Parle (E)', 'Maharashtra', 400057)));


Example 24:
1.	For creating TYPE ADDRESS_TY:
CREATE OR REPLACE TYPE ADDRESS_TY AS OBJECT(
	STREET VARCHAR2(50), CITY VARCHAR2(25), STATE VARCHAR2(25), ZIP NUMBER);

2.	For creating TYPE NAME_TY:
CREATE OR REPLACE TYPE NAME_TY AS OBJECT(
	NAME VARCHAR2(25), ADDRESS ADDRESS_TY);

3.	For creating TYPE DEPENDENT_TY:
CREATE OR REPLACE TYPE DEPENDENT_TY AS OBJECT(
	RELATION VARCHAR2(15), NAME NAME_TY, AGE NUMBER);

4.	For creating a NESTED TABLE:

CREATE OR REPLACE TYPE DEPENDENT_LIST AS TABLE OF DEPENDENT_TY;

5.	For creating TYPE EMPLOYEE_INFO_TY:

CREATE OR REPLACE TYPE EMPLOYEE_INFO_TY AS OBJECT(
	EMPLOYEE_ID NUMBER(5), NAME NAME_TY, SALARY NUMBER(10,2), 
	DEPT_ID NUMBER(5), DEPENDENTS DEPENDENT_LIST);

6.	For creating the TABLE EMPLOYEE_INFO of the TYPE EMPLOYEE_INFO_TY:

CREATE TABLE EMPLOYEE_INFO OF EMPLOYEE_INFO_TY 
	OIDINDEX OID_EMPLOYEE_INFO 
		NESTED TABLE DEPENDENTS STORE AS DEPENDENTS_TY;



1.	Inserting values in the nested table:

INSERT INTO EMPLOYEE_INFO EMP VALUES(1, NAME_TY('Sharanam', 
	ADDRESS_TY('JAY Chambers', 'VILE PARLE', 'MUMBAI', 400057)),8000,10, 
	DEPENDENT_LIST(
		DEPENDENT_TY('Sister', NAME_TY('Stuti', 
			ADDRESS_TY('Balgovinddas RD', 'Dadar', 'Mumbai', 400016)), 19), 
		DEPENDENT_TY('Mother', NAME_TY('Gopi', 
			ADDRESS_TY('Balgovinddas RD', 'Dadar', 'Mumbai', 400016)), 40), 
		DEPENDENT_TY('Father', NAME_TY('Chaitanya', 
			ADDRESS_TY('Balgovinddas RD', 'Dadar', 'Mumbai', 400016)), 42)));

2.	Inserting only detail table values in the nested table:

INSERT INTO THE (SELECT DEPENDENTS FROM EMPLOYEE_INFO) DEPENDS 
	VALUES(DEPENDENT_TY('Friend', NAME_TY('Vaishali', 
		ADDRESS_TY('Balgovinddas Rd', 'Dadar', 'Mumbai', 400016)),23));
INSERT INTO THE (SELECT DEPENDENTS FROM employee_info) DEPENDS 
	VALUES(DEPENDENT_TY('Colleague', NAME_TY('Hansel', 
		ADDRESS_TY('Subhash Rd', 'Parle', 'Mumbai', 400057)), 22));

3.	Updating values of a child record in the nested table:

UPDATE THE (SELECT DEPENDENTS FROM EMPLOYEE_INFO) DEPENDS 
	SET DEPENDS.RELATION = 'Wife' WHERE DEPENDS.RELATION = 'Friend';

4.	Deleting values of a child record in the nested table:

DELETE THE (SELECT DEPENDENTS FROM EMPLOYEE_INFO) DEPENDS 
	WHERE DEPENDS.RELATION = 'Colleague';

Example 25:
CREATE TABLE COMPANY_INFO(NAME VARCHAR2(50), ADDRESS VARCHAR2(1000));


Example 26:
CREATE TYPE COMPANY_ADDRESS_TY AS VARRAY(3) OF VARCHAR2(1000);


Example 27:
CREATE TABLE COMPANY_INFO(
	COMPANY_NAME VARCHAR2(50), ADDRESS COMPANY_ADDRESS_TY);

Example 28:
DESC COMPANY_INFO;

Example 29:

SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLUMNS 
	WHERE TABLE_NAME = 'COMPANY_INFO';

Example 30:
SELECT TYPECODE, ATTRIBUTES FROM  USER_TYPES 
	WHERE TYPE_NAME = 'COMPANY_ADDRESS_TY';

Example 31:
SELECT TYPE_NAME, COLL_TYPE, UPPER_BOUND FROM  USER_COLL_TYPES
	WHERE TYPE_NAME = 'COMPANY_ADDRESS_TY';

Example 32:

INSERT INTO COMPANY_INFO VALUES('Silicon Chip Technologies', 
	COMPANY_ADDRESS_TY('A/5 Jay Chambers, Service Road, Vile Parle (E), Mumbai 57', NULL, NULL));
INSERT INTO COMPANY_INFO VALUES('Jasper International', 
	COMPANY_ADDRESS_TY('S.D.F II,  Seepz, Andheri(E), Mumbai', 'ABBA House, MIDC, Andheri (E), Mumbai', 'Emmar Commercial Complex, A/5-407, S.V. Road, Borivli(W)'));

Examples For The Use Of REF

1.	For creating a TYPE object:
CREATE TYPE DEPT_TY AS OBJECT(
	DNAME VARCHAR2(100), ADDRESS VARCHAR2(200));

2.	For creating a TABLE object using the above TYPE object:
CREATE TABLE DEPT OF DEPT_TY;

3.	For creating a TABLE object that references to the TYPE object and also specifies the SCOPE:
CREATE TABLE EMP(
	ENAME  VARCHAR2(100), ENUMBER NUMBER, EDEPT REF DEPT_TY SCOPE IS DEPT);

4.	For inserting values in the DEPT table:
INSERT INTO DEPT VALUES(DEPT_TY('Sales', '501 Baliga Street'));
INSERT INTO DEPT VALUES(DEPT_TY('Accounts', '84 Darya Ganj'));

5.	For viewing the DEPT table:
SELECT * FROM DEPT;

6.	For viewing the REF from the DEPT table:
SELECT REF(D) FROM DEPT D;
	
7.	For inserting a row into the EMP table for an employee in Sales department:
INSERT INTO EMP SELECT 'Nirmal Pandey', 1, REF(d) FROM DEPT D 
	WHERE D.DNAME = 'Sales';

8.	For viewing records from the EMP table:
SELECT * FROM EMP;

9.	For viewing the ENAME, ENUMBER and the details of EDEPT column of the EMP table using the DEREF routine:
SELECT ENAME, ENUMBER, DEREF (EDEPT) FROM EMP;

