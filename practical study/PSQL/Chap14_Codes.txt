14. ADVANCE FEATURES IN SQL * PLUS

CODE A TREE-STRUCTURED QUERY

Example 1: 
SELECT LPAD('  ', LEVEL * 4) || FNAME || ' ' || LNAME "Employee Hierarchy" 
	FROM EMP_MSTR 
		CONNECT BY PRIOR EMP_NO = MNGR_NO START WITH MNGR_NO IS NULL;

Example 2: 
SELECT  * FROM  (SELECT B.NAME "BRANCH", 
	DECODE(E.BRANCH_NO, 'B1', (SELECT COUNT(EMP_NO) FROM EMP_MSTR 
		WHERE BRANCH_NO = 'B1')) "B1", 
	DECODE(E.BRANCH_NO, 'B2', (SELECT COUNT(EMP_NO) FROM EMP_MSTR 
		WHERE BRANCH_NO = 'B2')) "B2", 
	DECODE(E.BRANCH_NO, 'B3', (SELECT COUNT(EMP_NO) FROM EMP_MSTR 
		WHERE BRANCH_NO = 'B3')) "B3", 
	DECODE(E.BRANCH_NO, 'B4', (SELECT COUNT(EMP_NO) FROM EMP_MSTR 
		WHERE BRANCH_NO = 'B4')) "B4", 
	DECODE(E.BRANCH_NO, 'B5', (SELECT COUNT(EMP_NO) FROM EMP_MSTR 
		WHERE BRANCH_NO = 'B5')) "B5", 
	DECODE(E.BRANCH_NO, 'B6', (SELECT COUNT(EMP_NO)  FROM EMP_MSTR 
		WHERE BRANCH_NO = 'B6')) "B6" 
	FROM EMP_MSTR E, BRANCH_MSTR B 
		WHERE B.BRANCH_NO = E.BRANCH_NO 
	GROUP BY B.NAME, E.BRANCH_NO) ORDER BY 3;

Example 3:
SELECT DUMP(ACCT_NO) FROM ACCT_MSTR;

Example 4:
1
UPDATE EMP_MSTR SET MNAME = NULL;

RENAME EMP_MSTR TO EMP_MSTR_BASE;

CREATE VIEW EMP_MSTR 
	AS SELECT EMP_NO, BRANCH_NO, FNAME, LNAME, DEPT, DESIG FROM EMP_MSTR_BASE;


2
CREATE TABLE EMP_MSTR_NEW 
	AS SELECT EMP_NO, BRANCH_NO, FNAME, LNAME, DEPT, DESIG FROM EMP_MSTR;


DROP TABLE EMP_MSTR CASCADE CONSTRAINTS;

RENAME EMP_MSTR_NEW TO EMP_MSTR;


3
ALTER TABLE EMP_MSTR DROP COLUMN MNAME;

4
ALTER TABLE EMP_MSTR SET UNUSED COLUMN MNAME;

SELECT * FROM SYS.DBA_UNUSED_COL_TABS;

ALTER TABLE EMP_MSTR DROP UNUSED COLUMNS;

Example 5:
Solution 1
RENAME BRANCH_MSTR TO BRANCH_MSTR_BASE;

CREATE VIEW BRANCH_MSTR(BRANCH_NO, BRANCH_NAME) 
	AS SELECT * FROM BRANCH_MSTR_BASE;

Solution 2:
CREATE TABLE BRANCH_MSTR_NEW(BRANCH_NO, BRANCH_NAME) 
	AS SELECT * FROM BRANCH_MSTR;

DROP TABLE BRANCH_MSTR CASCADE CONSTRAINTS;

RENAME BRANCH_MSTR_NEW TO BRANCH_MSTR;

Solution 3:
ALTER TABLE BRANCH_MSTR ADD (BRANCH_NAME VARCHAR2(25));  

UPDATE BRANCH_MSTR SET BRANCH_NAME = NAME;

ALTER TABLE BRANCH_MSTR DROP COLUMN NAME;

Example 6:
Solution 1: Using Sub Queries
SELECT ROWNUM RN, EMP_NO, FNAME FROM EMP_MSTR WHERE (ROWID, 0) 
	IN (SELECT ROWID, MOD(ROWNUM,2) FROM EMP_MSTR);

Solution 2: Using dynamic views
SELECT * FROM (SELECT ROWNUM RN, EMP_NO, FNAME FROM EMP_MSTR) E
	WHERE MOD(E.RN,2) = 0;
	
Solution 3: Using GROUP BY and HAVING
SELECT ROWNUM, EMP_NO, FNAME FROM EMP_MSTR 
	GROUP BY ROWNUM, EMP_NO, FNAME 
		HAVING MOD(ROWNUM,2) = 0 OR ROWNUM = 2-0;

Example 7:
CREATE TABLE CUSTOMERS (CUST_NO NUMBER, NAME VARCHAR2(25));

INSERT INTO CUSTOMERS VALUES(0, 'Sharanam');
INSERT INTO CUSTOMERS VALUES(0, 'Vaishali');
INSERT INTO CUSTOMERS VALUES(0, 'Hansel');
INSERT INTO CUSTOMERS VALUES(0, 'Chhaya');
INSERT INTO CUSTOMERS VALUES(0, 'Ivan');

SELECT * FROM CUSTOMERS;

SELECT * FROM CUSTOMERS;

CREATE SEQUENCE SEQ_CUSTNO START WITH 1 INCREMENT BY 1;

UPDATE CUSTOMERS SET CUST_NO = SEQ_CUSTNO.NEXTVAL;

SELECT * FROM CUSTOMERS;

CREATE UNIQUE INDEX idxCUST_NO ON CUSTOMERS(CUST_NO);

INSERT INTO CUSTOMERS VALUES(1, 'Sharanam');

Example 8:
SELECT TO_CHAR(SYSDATE, 'DD-MON-YYYY HH:MI:SS') "Date", 
	TO_CHAR(SYSDATE+1, 'DD-MON-YYYY HH:MI:SS') "By 1 Day", 
	TO_CHAR(SYSDATE+1/24, 'DD-MON-YYYY HH:MI:SS') "By 1 Hour", 
	TO_CHAR(SYSDATE+1/1440, 'DD-MON-YYYY HH:MI:SS') "By 1 Minute", 
	TO_CHAR(SYSDATE+ 1/86400 , 'DD-MON-YYYY HH:MI:SS') "By 1 Second" FROM DUAL;

Example 9:
SELECT ACCT_NO, COUNT(*) "TRANSACTIONS PERFORMED" 
	FROM TRANS_MSTR GROUP BY ACCT_NO;


Example 10:
SELECT CUST_NO, 
	SUM(DECODE(SUBSTR(ACCT_FD_NO, 1, 2), 'CA', 1, 0)) "CURRENT ACCOUNTS",
	SUM(DECODE(SUBSTR(ACCT_FD_NO, 1, 2), 'SB', 1, 0)) "SAVINGS ACCOUNTS",
	SUM(DECODE(SUBSTR(ACCT_FD_NO, 1, 2), 'FS', 1, 0))  "FIXED DEPOSITS", 
	COUNT(ACCT_FD_NO) "TOTAL" 
	FROM ACCT_FD_CUST_DTLS GROUP BY CUST_NO;

Example 11:
Solution 1:
SELECT * FROM (SELECT ROWNUM RN, FNAME FROM EMP_MSTR 
	WHERE ROWNUM < 8) WHERE RN BETWEEN 4 and 7;

Solution 2:
SELECT ROWNUM RN, FNAME FROM EMP_MSTR 
	GROUP BY ROWNUM, FNAME HAVING ROWNUM BETWEEN 4 AND 7;

Solution 3:
SELECT ROWNUM RN, FNAME FROM EMP_MSTR WHERE ROWID IN(
	SELECT ROWID FROM EMP_MSTR WHERE ROWNUM <= 7
	MINUS 
	SELECT ROWID FROM EMP_MSTR WHERE ROWNUM < 4);

Example 12:

Solution 1:
ALTER USER hansel IDENTIFIED BY hansel123;


Solution 2:
Password hansel;

Solution 3:
Password;


Example 13:
Solution:
SELECT 'CUSTOMER NAME: ' || FNAME || ' ' || MNAME || ' ' || LNAME || CHR(10) 	|| 
	'BIRTHDATE: ' || DOB_INC || CHR(10) || 'OCCUPATION:  ' || OCCUP "Customer Details"
	FROM CUST_MSTR WHERE CUST_NO LIKE 'C%';

Example 14:
Solution 1: FOR UPPER-CASE LETTERS
SELECT TO_CHAR(TO_DATE(34654,'J'),'JSP') FROM DUAL; 

Solution 2: FOR TITLE-CASE LETTERS
SELECT TO_CHAR(TO_DATE(34654,'J'),'JsP') FROM DUAL; 

Solution 3: FOR LOWER-CASE LETTERS
SELECT TO_CHAR(TO_DATE(34654,'J'),'jSP') FROM DUAL; 

SELECT 'Rupees ' || DECODE(TRUNC(34654.23), 0, 'ZERO', 
	TO_CHAR(TO_DATE(TRUNC(34654.23),'J'),'JSP')) || ' AND ' ||
	DECODE(TRUNC(MOD(34654.23,1)*100), 0, 'ZERO', 
	TO_CHAR(TO_DATE(TRUNC(MOD(34654.23,1)*100),'J'),'JSP')) || ' Paise' 
	FROM DUAL;

Example 15:
Solution:

/* Suppress page headers, titles and all formatting */ 
SET PAGESIZE 0    

/* Switch off the SQL text before/after any variable substitution */ 
SET VERIFY OFF         

/* Set line size, make this as big as desired */ 
SET LINES 700       

/* Delete any blank spaces at the end of each spooled line */ 
SET TRIMSPOOL ON    

/* Switch off the lines number display returned by the query */ 
SET FEEDBACK OFF    

/* Switch off SELECT output to the screen */ 
SET TERMOUT OFF      

/* Separate each column by a comma character (CSV output) */ 
SET COLSEP ','          

/* Put the SELECT output into a file*/ 
SPOOL MY_EMP_REPORT.TXT    
SELECT EMP_NO, FNAME, LNAME, B.NAME, DEPT, DESIG 
	FROM EMP_MSTR E, BRANCH_MSTR B WHERE E.BRANCH_NO = B.BRANCH_NO;
SPOOL OFF

Example16:
SELECT NVL(FNAME, 'A'), NVL(MNAME, 'Corporate'), NVL(LNAME, 'Customer'), DOB_INC, OCCUP, PANCOPY, FORM60 FROM CUST_MSTR;

Example 17:
CREATE TABLE MyFriends (NAME VARCHAR2(15));

INSERT INTO MyFriends VALUES ('Neeta');
INSERT INTO MyFriends VALUES ('Mita');
INSERT INTO MyFriends VALUES ('Dipu');
INSERT INTO MyFriends VALUES ('Deepu');
INSERT INTO MyFriends VALUES ('Dipa');
INSERT INTO MyFriends VALUES ('Anil');
INSERT INTO MyFriends VALUES ('Sunil');

COMMIT;

SELECT * FROM MyFriends;

SELECT * FROM MyFriends WHERE SOUNDEX(NAME) = SOUNDEX('Nita');

SELECT * FROM MyFriends WHERE SOUNDEX(NAME) = SOUNDEX('Deep');

SELECT SOUNDEX(NAME), NAME, SOUNDEX('DEEP') FROM MYFRIENDS;


